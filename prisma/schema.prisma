// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  email           String    @unique
  username        String    @unique
  password        String
  token           String?
  tokenExpiry     DateTime?
  nftList         NFT[]
  timeServiceList TimeService[] 
  address         String
}

model TimeService {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  price       Float
  status      ServiceStatus
  ownerId     String   @db.ObjectId
  owner       User     @relation(fields: [ownerId], references: [id])
  timeStarted DateTime
  timeEnded   DateTime
  nft         NFT?     @relation(fields: [nftId], references: [id])
  nftId       String?  @db.ObjectId
}

model NFT {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  minterId      String       @db.ObjectId
  minter        User         @relation(fields: [minterId], references: [id])
  timeserviceId String       @db.ObjectId
  timeservice   TimeService  @relation(fields: [timeserviceId], references: [id])
  tokenURI      String
  tokenID       String
  contract      String
  status        String
  mintTime      DateTime
  transaction   String
}

model Transaction {
  nftId       string
  nft         NFT
  price       Float
  buyerId
  buyer       User
  sellerId
  seller      User
  transaction String
}

enum ServiceStatus {
  INIT
  MINT
  COMPLETED
  CANCELED
}
